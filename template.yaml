AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS API Gateway with a Lambda Integration
Parameters:
  LambdaFuncName:
    Type: String
    Default: "pythonTest"
  LambdaRuntime:
    Type: String
    Default: "python3.6"
  LambdaHandler:
    Type: String
    Default: "index.lambda_handler"
  LambdaMemory:
    Type: Number
    Default: 128
  LambdaTimeout:
    Type: Number
    Default: 40
  LogTableName:
    Type: String
    Default: 'lambdalogs'
    Description: (Required) The name of the DynamoDB table containing usage logs of your serverless application. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: 'Required parameter. Must be characters only. No numbers allowed.'
  UserTableName:
    Type: String
    Default: 'userlist'
    Description: (Required) The name of the DynamoDB table containing user info of your serverless application. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: 'Required parameter. Must be characters only. No numbers allowed.'
Resources:
  LambdaFunc:
    Properties:
      CodeUri: ./lambda-deploy.zip
      Layers:
        - arn:aws:lambda:us-east-1:432853048830:layer:bt3103-dependency-packages:4
      Description: Statistical Learning by 1d4
      FunctionName:
        Ref: "LambdaFuncName"
      Events:
        ExecuteFunc:
          Properties:
            Method: ANY
            Path: /{proxy+}
          Type: Api
      Handler:
        Ref: "LambdaHandler"
      MemorySize:
        Ref: "LambdaMemory"
      Runtime:
        Ref: "LambdaRuntime"
      Timeout:
        Ref: "LambdaTimeout"
      Policies:
        - Statement:
            - Effect: Allow
              Action: 
                - "s3:Get*"
                - "cloudwatch:GetMetricStatistics"
                - "s3:List*"
                - "cloudwatch:ListMetrics"
                - "logs:CreateLogGroup"
                - "logs:PutLogEvents"
                - "logs:CreateLogStream"
                - "cloudwatch:DescribeAlarmHistory"
                - "cloudwatch:DescribeAlarmsForMetric"
                - "cloudwatch:DescribeAlarms"
              Resource:
                - "*"
        - Statement:
            - Effect: Allow
              Action: 
                - "dynamodb:BatchGetItem"
                - "dynamodb:PutItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:UpdateItem"
                - "dynamodb:List*"
                - "dynamodb:Describe*"
                - "dynamodb:GetItem"
              Resource: 
                - "*"
      Environment:
        Variables:
          LOG_TABLE_NAME: 
            Ref: LogTableName 
          USER_TABLE_NAME: 
            Ref: UserTableName 
    Type: AWS::Serverless::Function
  DynamoDBLogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 
        Ref: LogTableName
      AttributeDefinitions:
        - AttributeName: logId
          AttributeType: S
      KeySchema:
        - AttributeName: logId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  DynamoDBUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 
        Ref: UserTableName
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST